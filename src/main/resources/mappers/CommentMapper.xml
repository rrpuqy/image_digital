<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.digitalimage.model.dao.CommentMapper">
  <resultMap id="BaseResultMap" type="com.example.digitalimage.model.entity.Comment">
    <id column="com_id" jdbcType="INTEGER" property="comId" />
    <result column="auth_id" jdbcType="BIGINT" property="authId" />
    <result column="article_id" jdbcType="BIGINT" property="articleId" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="ignore" jdbcType="INTEGER" property="ignore" />
    <result column="publishdate" jdbcType="TIMESTAMP" property="publishdate" />
  </resultMap>
  <sql id="Base_Column_List">
    com_id, auth_id, article_id, content, `status`, `ignore`, publishdate
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from comment
    where com_id = #{comId,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultType="com.example.digitalimage.model.entity.Comment">
    select * from comment
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from comment
    where com_id = #{comId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.digitalimage.model.entity.Comment">
    insert into comment (com_id, auth_id, article_id, 
      content, `status`, `ignore`, 
      publishdate)
    values (#{comId,jdbcType=INTEGER}, #{authId,jdbcType=BIGINT}, #{articleId,jdbcType=BIGINT},
      #{content,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, #{ignore,jdbcType=INTEGER}, 
      #{publishdate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.example.digitalimage.model.entity.Comment">
    insert into comment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="comId != null">
        com_id,
      </if>
      <if test="authId != null">
        auth_id,
      </if>
      <if test="articleId != null">
        article_id,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="ignore != null">
        `ignore`,
      </if>
      <if test="publishdate != null">
        publishdate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="comId != null">
        #{comId,jdbcType=INTEGER},
      </if>
      <if test="authId != null">
        #{authId,jdbcType=BIGINT},
      </if>
      <if test="articleId != null">
        #{articleId,jdbcType=BIGINT},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="ignore != null">
        #{ignore,jdbcType=INTEGER},
      </if>
      <if test="publishdate != null">
        #{publishdate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.digitalimage.model.entity.Comment">
    update comment
    <set>
      <if test="authId != null">
        auth_id = #{authId,jdbcType=BIGINT},
      </if>
      <if test="articleId != null">
        article_id = #{articleId,jdbcType=BIGINT},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=INTEGER},
      </if>
      <if test="ignore != null">
        `ignore` = #{ignore,jdbcType=INTEGER},
      </if>
      <if test="publishdate != null">
        publishdate = #{publishdate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where com_id = #{comId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.digitalimage.model.entity.Comment">
    update comment
    set auth_id = #{authId,jdbcType=BIGINT},
      article_id = #{articleId,jdbcType=BIGINT},
      content = #{content,jdbcType=VARCHAR},
      `status` = #{status,jdbcType=INTEGER},
      `ignore` = #{ignore,jdbcType=INTEGER},
      publishdate = #{publishdate,jdbcType=TIMESTAMP}
    where com_id = #{comId,jdbcType=INTEGER}
  </update>
  <select id="getCommentNum" resultType="java.lang.Integer">
    select count(*)
    from comment
    <where>
      <if test="start_date!=null and start_date!=''">
        publishdate &gt;= #{start_date}
      </if>
      <if test="current_date!=null and current_date!=''">
        and publishdate &lt;= #{current_date}
      </if>
      and auth_id = #{id}
    </where>
  </select>
</mapper>