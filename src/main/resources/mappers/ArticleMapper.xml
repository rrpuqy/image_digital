<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.digitalimage.model.dao.ArticleMapper">
  <resultMap id="BaseResultMap" type="com.example.digitalimage.model.entity.Article">
    <id column="art_id" jdbcType="BIGINT" property="artId" />
    <result column="auth_id" jdbcType="BIGINT" property="authId" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="visitornum" jdbcType="INTEGER" property="visitornum" />
    <result column="thumb" jdbcType="INTEGER" property="thumb" />
    <result column="collect" jdbcType="INTEGER" property="collect" />
    <result column="outstanding" jdbcType="INTEGER" property="outstanding" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="imgurl" jdbcType="VARCHAR" property="imgurl" />
    <result column="abstruct" jdbcType="VARCHAR" property="abstruct" />
    <result column="url" jdbcType="VARCHAR" property="url" />
    <result column="publishdate" jdbcType="TIMESTAMP" property="publishdate" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="come_from" jdbcType="VARCHAR" property="comeFrom" />
    <result column="category" jdbcType="VARCHAR" property="category" />
  </resultMap>
  <sql id="Base_Column_List">
    art_id, auth_id, title, visitornum, thumb, `collect`, outstanding, `status`, imgurl, 
    abstruct, url, publishdate, update_time, come_from, category
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from article
    where art_id = #{artId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from article
    where art_id = #{artId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.example.digitalimage.model.entity.Article">
    insert into article (art_id, auth_id, title, 
      visitornum, thumb, `collect`, 
      outstanding, `status`, imgurl, 
      abstruct, url, publishdate, 
      update_time, come_from, category
      )
    values (#{artId,jdbcType=BIGINT}, #{authId,jdbcType=BIGINT}, #{title,jdbcType=VARCHAR}, 
      #{visitornum,jdbcType=INTEGER}, #{thumb,jdbcType=INTEGER}, #{collect,jdbcType=INTEGER}, 
      #{outstanding,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, #{imgurl,jdbcType=VARCHAR}, 
      #{abstruct,jdbcType=VARCHAR}, #{url,jdbcType=VARCHAR}, #{publishdate,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{comeFrom,jdbcType=VARCHAR}, #{category,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.digitalimage.model.entity.Article" useGeneratedKeys="true" keyProperty="artId" keyColumn="art_id">
    insert into article
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="artId != null">
        art_id,
      </if>
      <if test="authId != null">
        auth_id,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="visitornum != null">
        visitornum,
      </if>
      <if test="thumb != null">
        thumb,
      </if>
      <if test="collect != null">
        `collect`,
      </if>
      <if test="outstanding != null">
        outstanding,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="imgurl != null">
        imgurl,
      </if>
      <if test="abstruct != null">
        abstruct,
      </if>
      <if test="url != null">
        url,
      </if>
      <if test="publishdate != null">
        publishdate,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="comeFrom != null">
        come_from,
      </if>
      <if test="category != null">
        category,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="artId != null">
        #{artId,jdbcType=BIGINT},
      </if>
      <if test="authId != null">
        #{authId,jdbcType=BIGINT},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="visitornum != null">
        #{visitornum,jdbcType=INTEGER},
      </if>
      <if test="thumb != null">
        #{thumb,jdbcType=INTEGER},
      </if>
      <if test="collect != null">
        #{collect,jdbcType=INTEGER},
      </if>
      <if test="outstanding != null">
        #{outstanding,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="imgurl != null">
        #{imgurl,jdbcType=VARCHAR},
      </if>
      <if test="abstruct != null">
        #{abstruct,jdbcType=VARCHAR},
      </if>
      <if test="url != null">
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="publishdate != null">
        #{publishdate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="comeFrom != null">
        #{comeFrom,jdbcType=VARCHAR},
      </if>
      <if test="category != null">
        #{category,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="addCollect">
    update article set collect=collect+1
    where art_id=#{id}
  </update>
  <update id="addLike">
    update  article set thumb = thumb+1
    where art_id=#{id}
  </update>

  <update id="addVisitorNum" parameterType="java.lang.Long">
      update article set visitornum = visitornum+1
      where art_id = #{id}
    </update>

  <update id="updateByPrimaryKeySelective" parameterType="com.example.digitalimage.model.entity.Article">
    update article
    <set>
      <if test="authId != null">
        auth_id = #{authId,jdbcType=BIGINT},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="visitornum != null">
        visitornum = #{visitornum,jdbcType=INTEGER},
      </if>
      <if test="thumb != null">
        thumb = #{thumb,jdbcType=INTEGER},
      </if>
      <if test="collect != null">
        `collect` = #{collect,jdbcType=INTEGER},
      </if>
      <if test="outstanding != null">
        outstanding = #{outstanding,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=INTEGER},
      </if>
      <if test="imgurl != null">
        imgurl = #{imgurl,jdbcType=VARCHAR},
      </if>
      <if test="abstruct != null">
        abstruct = #{abstruct,jdbcType=VARCHAR},
      </if>
      <if test="url != null">
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="publishdate != null">
        publishdate = #{publishdate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="comeFrom != null">
        come_from = #{comeFrom,jdbcType=VARCHAR},
      </if>
      <if test="category != null">
        category = #{category,jdbcType=VARCHAR},
      </if>
    </set>
    where art_id = #{artId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.digitalimage.model.entity.Article">
    update article
    set auth_id = #{authId,jdbcType=BIGINT},
      title = #{title,jdbcType=VARCHAR},
      visitornum = #{visitornum,jdbcType=INTEGER},
      thumb = #{thumb,jdbcType=INTEGER},
      `collect` = #{collect,jdbcType=INTEGER},
      outstanding = #{outstanding,jdbcType=INTEGER},
      `status` = #{status,jdbcType=INTEGER},
      imgurl = #{imgurl,jdbcType=VARCHAR},
      abstruct = #{abstruct,jdbcType=VARCHAR},
      url = #{url,jdbcType=VARCHAR},
      publishdate = #{publishdate,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      come_from = #{comeFrom,jdbcType=VARCHAR},
      category = #{category,jdbcType=VARCHAR}
    where art_id = #{artId,jdbcType=BIGINT}
  </update>
  <select id="selectAll" resultMap="BaseResultMap">
    select * from article
  </select>
  <select id="select_by_category" parameterType="java.lang.String" resultMap="BaseResultMap">
    select * from article
    where category like "%"#{category_name,jdbcType=VARCHAR}"%"
    order by visitornum DESC
  </select>
  <select id="getPublishNum" resultType="java.lang.Integer">
    select count(*)
    from article
    <where>
      <if test="start_date!=null and start_date!=''">
        publishdate &gt;= #{start_date}
      </if>
      <if test="current_date!=null and current_date!=''">
        and publishdate &lt;= #{current_date}
      </if>
      and auth_id = #{id}
    </where>
  </select>
</mapper>